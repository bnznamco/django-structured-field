import{_ as l,c,a as o,b as a,e as t,d as s,w as i,r as p,o as r}from"./app-B4__nN3S.js";const d={};function u(h,n){const e=p("RouteLink");return r(),c("div",null,[n[6]||(n[6]=o(`<h1 id="⚙️-settings-configuration" tabindex="-1"><a class="header-anchor" href="#⚙️-settings-configuration"><span>⚙️ Settings Configuration</span></a></h1><p>This guide explains how to configure Django Structured JSON Field through Django settings.</p><h2 id="📋-overview" tabindex="-1"><a class="header-anchor" href="#📋-overview"><span>📋 Overview</span></a></h2><p>The Django Structured JSON Field can be configured through the <code>STRUCTURED_FIELD</code> setting in your Django settings file. This allows you to customize behavior like caching to match your application&#39;s needs.</p><h2 id="🚀-basic-configuration" tabindex="-1"><a class="header-anchor" href="#🚀-basic-configuration"><span>🚀 Basic Configuration</span></a></h2><p>Add the following to your <code>settings.py</code>:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">STRUCTURED_FIELD <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token comment"># Default is True</span></span>
<span class="line">        <span class="token string">&#39;SHARED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span>   <span class="token comment"># Default is False, experimental feature</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔧-available-settings" tabindex="-1"><a class="header-anchor" href="#🔧-available-settings"><span>🔧 Available Settings</span></a></h2><p>Currently, the package supports the following settings:</p><h3 id="🗄️-cache-settings" tabindex="-1"><a class="header-anchor" href="#🗄️-cache-settings"><span>🗄️ Cache Settings</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">STRUCTURED_FIELD <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>   <span class="token comment"># Enable/disable caching (default: True)</span></span>
<span class="line">        <span class="token string">&#39;SHARED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span>    <span class="token comment"># Enable thread-shared cache (experimental, default: False)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📝-settings-explained" tabindex="-1"><a class="header-anchor" href="#📝-settings-explained"><span>📝 Settings Explained</span></a></h2><h3 id="🗄️-cache-settings-1" tabindex="-1"><a class="header-anchor" href="#🗄️-cache-settings-1"><span>🗄️ Cache Settings</span></a></h3><h4 id="enabled" tabindex="-1"><a class="header-anchor" href="#enabled"><span>ENABLED</span></a></h4><p>Controls whether the caching mechanism is enabled or disabled:</p><ul><li><code>True</code> (default): Enables caching, which optimizes queries especially for related fields</li><li><code>False</code>: Disables caching, which may be useful for debugging or testing</li></ul><p>When caching is enabled, the field maintains an internal cache of related objects (from <code>ForeignKey</code> and <code>QuerySet</code> fields), reducing the number of database queries needed when accessing these objects.</p><h4 id="shared" tabindex="-1"><a class="header-anchor" href="#shared"><span>SHARED</span></a></h4><p>Controls whether the cache is shared between instances:</p><ul><li><code>False</code> (default): Each field instance maintains its own cache</li><li><code>True</code> (experimental): Cache is shared across all instances, providing maximum optimization but with potential side effects</li></ul><p>The shared cache is marked as experimental because it uses a global cache that&#39;s shared across threads, which may lead to unexpected behavior in multi-threaded environments.</p><h2 id="🔄-environment-specific-configurations" tabindex="-1"><a class="header-anchor" href="#🔄-environment-specific-configurations"><span>🔄 Environment-Specific Configurations</span></a></h2><h3 id="🛠️-development-settings" tabindex="-1"><a class="header-anchor" href="#🛠️-development-settings"><span>🛠️ Development Settings</span></a></h3><p>For development, you might want to disable caching to make it easier to debug:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># settings/development.py</span></span>
<span class="line">STRUCTURED_FIELD <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span>  <span class="token comment"># Disable cache for easier debugging</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🧪-testing-settings" tabindex="-1"><a class="header-anchor" href="#🧪-testing-settings"><span>🧪 Testing Settings</span></a></h3><p>For testing, you might want to test different cache configurations:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># settings/test.py</span></span>
<span class="line">STRUCTURED_FIELD <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token comment"># Test with cache enabled</span></span>
<span class="line">        <span class="token string">&#39;SHARED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span>   <span class="token comment"># Standard cache mode</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🌐-production-settings" tabindex="-1"><a class="header-anchor" href="#🌐-production-settings"><span>🌐 Production Settings</span></a></h3><p>For production, the default settings are generally recommended:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># settings/production.py</span></span>
<span class="line">STRUCTURED_FIELD <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token comment"># Enable cache for performance</span></span>
<span class="line">        <span class="token string">&#39;SHARED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span>   <span class="token comment"># Use standard cache mode</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔍-testing-different-cache-modes" tabindex="-1"><a class="header-anchor" href="#🔍-testing-different-cache-modes"><span>🔍 Testing Different Cache Modes</span></a></h2><p>Based on the test files, you can test your application with different cache modes to measure performance and correctness:</p><h3 id="testing-with-cache-disabled" tabindex="-1"><a class="header-anchor" href="#testing-with-cache-disabled"><span>Testing with Cache Disabled</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>test <span class="token keyword">import</span> override_settings</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@override_settings</span><span class="token punctuation">(</span>STRUCTURED_FIELD<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">test_without_cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># Test code here</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testing-with-standard-cache" tabindex="-1"><a class="header-anchor" href="#testing-with-standard-cache"><span>Testing with Standard Cache</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>test <span class="token keyword">import</span> override_settings</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@override_settings</span><span class="token punctuation">(</span>STRUCTURED_FIELD<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">&#39;SHARED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">test_with_standard_cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># Test code here</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="testing-with-shared-cache" tabindex="-1"><a class="header-anchor" href="#testing-with-shared-cache"><span>Testing with Shared Cache</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>test <span class="token keyword">import</span> override_settings</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@override_settings</span><span class="token punctuation">(</span>STRUCTURED_FIELD<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token string">&#39;SHARED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">def</span> <span class="token function">test_with_shared_cache</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token comment"># Test code here</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📋-best-practices" tabindex="-1"><a class="header-anchor" href="#📋-best-practices"><span>📋 Best Practices</span></a></h2><ol><li><p><strong>Cache Configuration</strong>:</p><ul><li>Keep caching enabled in production for performance benefits</li><li>Test thoroughly with both cache enabled and disabled</li><li>Use the shared cache option only after extensive testing</li></ul></li><li><p><strong>Testing</strong>:</p><ul><li>Use Django&#39;s <code>override_settings</code> to test different cache configurations</li><li>Measure query counts with different cache settings</li><li>Verify behavior correctness with all cache configurations</li></ul></li><li><p><strong>Deployment</strong>:</p><ul><li>Document your cache settings in your deployment configuration</li><li>Monitor performance in production</li><li>Consider adjusting settings based on real-world performance data</li></ul></li></ol><h2 id="❓-common-issues-and-solutions" tabindex="-1"><a class="header-anchor" href="#❓-common-issues-and-solutions"><span>❓ Common Issues and Solutions</span></a></h2><ol><li><p><strong>Performance Issues</strong>:</p><ul><li>If experiencing slow performance with relationships, ensure caching is enabled</li><li>If memory usage is high, consider if shared cache might be contributing</li><li>Use Django Debug Toolbar or similar tools to monitor query counts</li></ul></li><li><p><strong>Unexpected Behavior</strong>:</p><ul><li>If you notice unexpected results, try disabling the cache to see if caching is the cause</li><li>Be particularly careful with the shared cache in multi-threaded environments</li><li>Consider flush/clearing cache between test runs in your test suite</li></ul></li></ol><h2 id="🔄-next-steps" tabindex="-1"><a class="header-anchor" href="#🔄-next-steps"><span>🔄 Next Steps</span></a></h2><p>After configuring settings, you might want to explore:</p>`,45)),a("ul",null,[a("li",null,[t(e,{to:"/Guide/How%20to/Caching/"},{default:i(()=>n[0]||(n[0]=[s("⚡ Caching")])),_:1}),n[1]||(n[1]=s(" for more details on how caching works"))]),a("li",null,[t(e,{to:"/Guide/How%20to/Relationships/"},{default:i(()=>n[2]||(n[2]=[s("🔗 Relationships")])),_:1}),n[3]||(n[3]=s(" for working with related models"))]),a("li",null,[t(e,{to:"/Guide/How%20to/REST%20Framework%20Integration/"},{default:i(()=>n[4]||(n[4]=[s("🌐 REST Framework Integration")])),_:1}),n[5]||(n[5]=s(" for API configuration"))])])])}const m=l(d,[["render",u]]),v=JSON.parse('{"path":"/Guide/How%20to/Settings%20Configuration/","title":"⚙️ Settings Configuration","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"📋 Overview","slug":"📋-overview","link":"#📋-overview","children":[]},{"level":2,"title":"🚀 Basic Configuration","slug":"🚀-basic-configuration","link":"#🚀-basic-configuration","children":[]},{"level":2,"title":"🔧 Available Settings","slug":"🔧-available-settings","link":"#🔧-available-settings","children":[{"level":3,"title":"🗄️ Cache Settings","slug":"🗄️-cache-settings","link":"#🗄️-cache-settings","children":[]}]},{"level":2,"title":"📝 Settings Explained","slug":"📝-settings-explained","link":"#📝-settings-explained","children":[{"level":3,"title":"🗄️ Cache Settings","slug":"🗄️-cache-settings-1","link":"#🗄️-cache-settings-1","children":[]}]},{"level":2,"title":"🔄 Environment-Specific Configurations","slug":"🔄-environment-specific-configurations","link":"#🔄-environment-specific-configurations","children":[{"level":3,"title":"🛠️ Development Settings","slug":"🛠️-development-settings","link":"#🛠️-development-settings","children":[]},{"level":3,"title":"🧪 Testing Settings","slug":"🧪-testing-settings","link":"#🧪-testing-settings","children":[]},{"level":3,"title":"🌐 Production Settings","slug":"🌐-production-settings","link":"#🌐-production-settings","children":[]}]},{"level":2,"title":"🔍 Testing Different Cache Modes","slug":"🔍-testing-different-cache-modes","link":"#🔍-testing-different-cache-modes","children":[{"level":3,"title":"Testing with Cache Disabled","slug":"testing-with-cache-disabled","link":"#testing-with-cache-disabled","children":[]},{"level":3,"title":"Testing with Standard Cache","slug":"testing-with-standard-cache","link":"#testing-with-standard-cache","children":[]},{"level":3,"title":"Testing with Shared Cache","slug":"testing-with-shared-cache","link":"#testing-with-shared-cache","children":[]}]},{"level":2,"title":"📋 Best Practices","slug":"📋-best-practices","link":"#📋-best-practices","children":[]},{"level":2,"title":"❓ Common Issues and Solutions","slug":"❓-common-issues-and-solutions","link":"#❓-common-issues-and-solutions","children":[]},{"level":2,"title":"🔄 Next Steps","slug":"🔄-next-steps","link":"#🔄-next-steps","children":[]}],"git":{"updatedTime":1742998502000,"contributors":[{"name":"bnznamco","username":"bnznamco","email":"gabriele.baldi.01@gmail.com","commits":3,"url":"https://github.com/bnznamco"}],"changelog":[{"hash":"695f3a53d7ba8180183e8cb2e0cabcd2ffbd0893","time":1742998502000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: update contents"},{"hash":"a03b155355b11640e5a70a3df3068c393c90f6b1","time":1742982268000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: updated to vuepress 2"},{"hash":"853b7590c1e47d887ae5c09c54d82094e5b20d66","time":1742974046000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: added github-pages docs"}]},"filePathRelative":"Guide/How to/Settings Configuration/README.md"}');export{m as comp,v as data};
