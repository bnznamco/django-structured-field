import{_ as p,c as i,a as o,b as a,e as t,d as n,w as l,r as c,o as r}from"./app-B4__nN3S.js";const u={};function d(m,s){const e=c("RouteLink");return r(),i("div",null,[s[6]||(s[6]=o(`<h1 id="🧰-admin-integration" tabindex="-1"><a class="header-anchor" href="#🧰-admin-integration"><span>🧰 Admin Integration</span></a></h1><p>This guide explains how to integrate Django Structured JSON Field with the Django admin interface.</p><h2 id="🚀-basic-setup" tabindex="-1"><a class="header-anchor" href="#🚀-basic-setup"><span>🚀 Basic Setup</span></a></h2><h3 id="_1️⃣-configure-urls" tabindex="-1"><a class="header-anchor" href="#_1️⃣-configure-urls"><span>1️⃣ Configure URLs</span></a></h3><p>First, include the structured URLs in your <code>urls.py</code> to enable the autocomplete search feature:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>urls <span class="token keyword">import</span> path<span class="token punctuation">,</span> include</span>
<span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin</span>
<span class="line"></span>
<span class="line">urlpatterns <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    path<span class="token punctuation">(</span><span class="token string">&#39;admin/&#39;</span><span class="token punctuation">,</span> admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>urls<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    path<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> include<span class="token punctuation">(</span><span class="token string">&#39;structured.urls&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># Required for autocomplete search</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2️⃣-register-your-model" tabindex="-1"><a class="header-anchor" href="#_2️⃣-register-your-model"><span>2️⃣ Register Your Model</span></a></h3><p>Register your model in <code>admin.py</code>:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin</span>
<span class="line"><span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> MyModel</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@admin<span class="token punctuation">.</span>register</span><span class="token punctuation">(</span>MyModel<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyModelAdmin</span><span class="token punctuation">(</span>admin<span class="token punctuation">.</span>ModelAdmin<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">pass</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>StructuredJSONField</code> will automatically use a custom JSON editor in the admin interface. This editor provides:</p><ul><li>A structured form for editing JSON data</li><li>Autocomplete for related fields (ForeignKey and QuerySet)</li><li>Validation against your schema</li></ul><h2 id="🔧-json-editor-features" tabindex="-1"><a class="header-anchor" href="#🔧-json-editor-features"><span>🔧 JSON Editor Features</span></a></h2><p>The JSON editor in the admin interface provides several features:</p><ol><li><strong>✅ Schema-based Validation</strong>: Ensures data conforms to your Pydantic schema</li><li><strong>🔍 Related Object Search</strong>: Autocomplete for foreign keys and querysets</li><li><strong>📦 Nested Data Editing</strong>: Support for nested schema objects</li><li><strong>🖌️ User-friendly Interface</strong>: Visual editor for JSON data</li></ol><h2 id="📝-working-with-structured-data-in-admin" tabindex="-1"><a class="header-anchor" href="#📝-working-with-structured-data-in-admin"><span>📝 Working with Structured Data in Admin</span></a></h2><h3 id="🧩-simple-data" tabindex="-1"><a class="header-anchor" href="#🧩-simple-data"><span>🧩 Simple Data</span></a></h3><p>You can create and edit simple structured data directly in the admin:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># In your model</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MySchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyModel</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">    structured_data <span class="token operator">=</span> StructuredJSONField<span class="token punctuation">(</span>schema<span class="token operator">=</span>MySchema<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the admin, you&#39;ll be able to edit this as:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John Doe&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">30</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="📦-nested-data" tabindex="-1"><a class="header-anchor" href="#📦-nested-data"><span>📦 Nested Data</span></a></h3><p>You can also work with nested structured data:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># In your model</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ChildSchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ParentSchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    child<span class="token punctuation">:</span> ChildSchema <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyModel</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">    structured_data <span class="token operator">=</span> StructuredJSONField<span class="token punctuation">(</span>schema<span class="token operator">=</span>ParentSchema<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the admin, you&#39;ll be able to edit this as:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Parent&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;child&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Child&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">10</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🔑-foreign-key-fields" tabindex="-1"><a class="header-anchor" href="#🔑-foreign-key-fields"><span>🔑 Foreign Key Fields</span></a></h3><p>For foreign key fields:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># In your model</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MySchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    fk_field<span class="token punctuation">:</span> SomeModel <span class="token operator">=</span> <span class="token boolean">None</span>  <span class="token comment"># Foreign key reference</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyModel</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">    structured_data <span class="token operator">=</span> StructuredJSONField<span class="token punctuation">(</span>schema<span class="token operator">=</span>MySchema<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the admin, you can use the ID of the related model:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;fk_field&quot;</span><span class="token operator">:</span> <span class="token number">1</span>  # ID of the related SomeModel instance</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The admin interface will display this as a searchable dropdown.</p><h3 id="🔀-queryset-fields" tabindex="-1"><a class="header-anchor" href="#🔀-queryset-fields"><span>🔀 QuerySet Fields</span></a></h3><p>For QuerySet fields:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># In your model</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MySchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    qs_field<span class="token punctuation">:</span> QuerySet<span class="token punctuation">[</span>SomeModel<span class="token punctuation">]</span>  <span class="token comment"># Multiple related objects</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyModel</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">    structured_data <span class="token operator">=</span> StructuredJSONField<span class="token punctuation">(</span>schema<span class="token operator">=</span>MySchema<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the admin, you can use a list of IDs:</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;John&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;qs_field&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>  # IDs of related SomeModel instances</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The admin interface will display this as a searchable multi-select field.</p><h2 id="🎨-customizing-the-admin-display" tabindex="-1"><a class="header-anchor" href="#🎨-customizing-the-admin-display"><span>🎨 Customizing the Admin Display</span></a></h2><h3 id="📋-list-display" tabindex="-1"><a class="header-anchor" href="#📋-list-display"><span>📋 List Display</span></a></h3><p>You can display structured data fields in the list view:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin</span>
<span class="line"><span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> MyModel</span>
<span class="line"></span>
<span class="line"><span class="token decorator annotation punctuation">@admin<span class="token punctuation">.</span>register</span><span class="token punctuation">(</span>MyModel<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyModelAdmin</span><span class="token punctuation">(</span>admin<span class="token punctuation">.</span>ModelAdmin<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    list_display <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get_structured_name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get_structured_age&#39;</span><span class="token punctuation">]</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_structured_name</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> obj<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>name <span class="token keyword">if</span> obj<span class="token punctuation">.</span>structured_data <span class="token keyword">else</span> <span class="token boolean">None</span></span>
<span class="line">    get_structured_name<span class="token punctuation">.</span>short_description <span class="token operator">=</span> <span class="token string">&#39;Name&#39;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">get_structured_age</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obj<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> obj<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>age <span class="token keyword">if</span> obj<span class="token punctuation">.</span>structured_data <span class="token keyword">else</span> <span class="token boolean">None</span></span>
<span class="line">    get_structured_age<span class="token punctuation">.</span>short_description <span class="token operator">=</span> <span class="token string">&#39;Age&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🔍-search-fields" tabindex="-1"><a class="header-anchor" href="#🔍-search-fields"><span>🔍 Search Fields</span></a></h3><p>You can search within structured data fields:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token decorator annotation punctuation">@admin<span class="token punctuation">.</span>register</span><span class="token punctuation">(</span>MyModel<span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MyModelAdmin</span><span class="token punctuation">(</span>admin<span class="token punctuation">.</span>ModelAdmin<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    search_fields <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;structured_data__name&#39;</span><span class="token punctuation">]</span>  <span class="token comment"># Search by name in structured data</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note that search on JSON fields may have limitations depending on your database.</p><h2 id="💡-best-practices" tabindex="-1"><a class="header-anchor" href="#💡-best-practices"><span>💡 Best Practices</span></a></h2><ol><li><p><strong>📁 Field Organization</strong>:</p><ul><li>Keep related fields grouped in your schema</li><li>Use descriptive field names</li><li>Consider the admin user experience when designing your schema</li></ul></li><li><p><strong>✅ Validation</strong>:</p><ul><li>Use Pydantic validators in your schema for custom validation</li><li>Handle potential empty or invalid values gracefully</li></ul></li><li><p><strong>🔄 Default Values</strong>:</p><ul><li>Provide sensible defaults for all fields</li><li>Use initialization functions for complex defaults</li></ul></li><li><p><strong>🔗 Related Objects</strong>:</p><ul><li>Use descriptive labels for related object fields</li><li>Consider using pre-filtered querysets for large relationships</li></ul></li></ol><h2 id="❓-common-issues-and-solutions" tabindex="-1"><a class="header-anchor" href="#❓-common-issues-and-solutions"><span>❓ Common Issues and Solutions</span></a></h2><ol><li><p><strong>🔍 Autocomplete Not Working</strong>:</p><ul><li>Ensure that <code>structured.urls</code> is included in your URLs</li><li>Check browser console for JavaScript errors</li><li>Verify that the related model is correctly registered</li></ul></li><li><p><strong>⚠️ Validation Errors</strong>:</p><ul><li>Check the JSON format in the editor</li><li>Ensure all required fields have values</li><li>Verify that related object IDs exist</li></ul></li><li><p><strong>⚡ Performance</strong>:</p><ul><li>Limit the number of related objects shown in dropdowns</li><li>Use appropriate indexing on related model fields</li><li>Enable caching for better performance</li></ul></li></ol><h2 id="🔄-next-steps" tabindex="-1"><a class="header-anchor" href="#🔄-next-steps"><span>🔄 Next Steps</span></a></h2><p>After mastering admin integration, you might want to explore:</p>`,51)),a("ul",null,[a("li",null,[t(e,{to:"/Guide/How%20to/REST%20Framework%20Integration/"},{default:l(()=>s[0]||(s[0]=[n("🌍 REST Framework Integration")])),_:1}),s[1]||(s[1]=n(" for API endpoints"))]),a("li",null,[t(e,{to:"/Guide/How%20to/Caching/"},{default:l(()=>s[2]||(s[2]=[n("⚡ Caching")])),_:1}),s[3]||(s[3]=n(" for optimizing admin performance"))]),a("li",null,[t(e,{to:"/Guide/How%20to/Relationships/"},{default:l(()=>s[4]||(s[4]=[n("🔗 Relationships")])),_:1}),s[5]||(s[5]=n(" for more complex data structures"))])])])}const h=p(u,[["render",d]]),v=JSON.parse('{"path":"/Guide/How%20to/Admin%20Integration/","title":"🧰 Admin Integration","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"🚀 Basic Setup","slug":"🚀-basic-setup","link":"#🚀-basic-setup","children":[{"level":3,"title":"1️⃣ Configure URLs","slug":"_1️⃣-configure-urls","link":"#_1️⃣-configure-urls","children":[]},{"level":3,"title":"2️⃣ Register Your Model","slug":"_2️⃣-register-your-model","link":"#_2️⃣-register-your-model","children":[]}]},{"level":2,"title":"🔧 JSON Editor Features","slug":"🔧-json-editor-features","link":"#🔧-json-editor-features","children":[]},{"level":2,"title":"📝 Working with Structured Data in Admin","slug":"📝-working-with-structured-data-in-admin","link":"#📝-working-with-structured-data-in-admin","children":[{"level":3,"title":"🧩 Simple Data","slug":"🧩-simple-data","link":"#🧩-simple-data","children":[]},{"level":3,"title":"📦 Nested Data","slug":"📦-nested-data","link":"#📦-nested-data","children":[]},{"level":3,"title":"🔑 Foreign Key Fields","slug":"🔑-foreign-key-fields","link":"#🔑-foreign-key-fields","children":[]},{"level":3,"title":"🔀 QuerySet Fields","slug":"🔀-queryset-fields","link":"#🔀-queryset-fields","children":[]}]},{"level":2,"title":"🎨 Customizing the Admin Display","slug":"🎨-customizing-the-admin-display","link":"#🎨-customizing-the-admin-display","children":[{"level":3,"title":"📋 List Display","slug":"📋-list-display","link":"#📋-list-display","children":[]},{"level":3,"title":"🔍 Search Fields","slug":"🔍-search-fields","link":"#🔍-search-fields","children":[]}]},{"level":2,"title":"💡 Best Practices","slug":"💡-best-practices","link":"#💡-best-practices","children":[]},{"level":2,"title":"❓ Common Issues and Solutions","slug":"❓-common-issues-and-solutions","link":"#❓-common-issues-and-solutions","children":[]},{"level":2,"title":"🔄 Next Steps","slug":"🔄-next-steps","link":"#🔄-next-steps","children":[]}],"git":{"updatedTime":1742998502000,"contributors":[{"name":"bnznamco","username":"bnznamco","email":"gabriele.baldi.01@gmail.com","commits":3,"url":"https://github.com/bnznamco"}],"changelog":[{"hash":"695f3a53d7ba8180183e8cb2e0cabcd2ffbd0893","time":1742998502000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: update contents"},{"hash":"a03b155355b11640e5a70a3df3068c393c90f6b1","time":1742982268000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: updated to vuepress 2"},{"hash":"853b7590c1e47d887ae5c09c54d82094e5b20d66","time":1742974046000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: added github-pages docs"}]},"filePathRelative":"Guide/How to/Admin Integration/README.md"}');export{h as comp,v as data};
