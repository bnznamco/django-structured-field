import{_ as l,c as i,a as o,b as a,e as t,d as n,w as p,r as c,o as u}from"./app-B4__nN3S.js";const r={};function d(k,s){const e=c("RouteLink");return u(),i("div",null,[s[6]||(s[6]=o(`<h1 id="ðŸ”—-relationships" tabindex="-1"><a class="header-anchor" href="#ðŸ”—-relationships"><span>ðŸ”— Relationships</span></a></h1><p>This guide covers how to work with different types of relationships in Django Structured JSON Field.</p><h2 id="ðŸ”„-types-of-relationships" tabindex="-1"><a class="header-anchor" href="#ðŸ”„-types-of-relationships"><span>ðŸ”„ Types of Relationships</span></a></h2><p>The field supports three main types of relationships:</p><ol><li>ðŸ“¦ Recursive relationships</li><li>ðŸ”‘ Foreign Key relationships</li><li>ðŸ”€ Many-to-Many relationships (QuerySet fields)</li></ol><h2 id="ðŸ“¦-recursive-relationships" tabindex="-1"><a class="header-anchor" href="#ðŸ“¦-recursive-relationships"><span>ðŸ“¦ Recursive Relationships</span></a></h2><p>Recursive relationships allow you to create self-referential structures in your schema.</p><h3 id="ðŸ§©-basic-recursion" tabindex="-1"><a class="header-anchor" href="#ðŸ§©-basic-recursion"><span>ðŸ§© Basic Recursion</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token punctuation">,</span> List</span>
<span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>models <span class="token keyword">import</span> BaseModel</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MySchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    parent<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token string">&#39;MySchema&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    relateds<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token string">&#39;MySchema&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ðŸš€-usage-example" tabindex="-1"><a class="header-anchor" href="#ðŸš€-usage-example"><span>ðŸš€ Usage Example</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Create a parent instance</span></span>
<span class="line">parent <span class="token operator">=</span> MySchema<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Parent&quot;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create a child instance</span></span>
<span class="line">child <span class="token operator">=</span> MySchema<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Child&quot;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> parent<span class="token operator">=</span>parent<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create a model instance</span></span>
<span class="line">model_instance <span class="token operator">=</span> MyModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="line">    title<span class="token operator">=</span><span class="token string">&quot;Example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    structured_data<span class="token operator">=</span>child</span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Access the parent</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>parent<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token comment"># &quot;Parent&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ðŸ”‘-foreign-key-relationships" tabindex="-1"><a class="header-anchor" href="#ðŸ”‘-foreign-key-relationships"><span>ðŸ”‘ Foreign Key Relationships</span></a></h2><p>Foreign Key relationships allow you to reference other Django models in your schema.</p><h3 id="ðŸ§©-using-foreignkey-field" tabindex="-1"><a class="header-anchor" href="#ðŸ§©-using-foreignkey-field"><span>ðŸ§© Using ForeignKey Field</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>fields <span class="token keyword">import</span> ForeignKey</span>
<span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>models <span class="token keyword">import</span> BaseModel</span>
<span class="line"><span class="token keyword">from</span> myapp<span class="token punctuation">.</span>models <span class="token keyword">import</span> SomeModel</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MySchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    fk_field<span class="token punctuation">:</span> ForeignKey<span class="token punctuation">[</span>SomeModel<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ðŸ”„-alternative-syntax" tabindex="-1"><a class="header-anchor" href="#ðŸ”„-alternative-syntax"><span>ðŸ”„ Alternative Syntax</span></a></h3><p>You can also use the model class directly as the type annotation:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>models <span class="token keyword">import</span> BaseModel</span>
<span class="line"><span class="token keyword">from</span> myapp<span class="token punctuation">.</span>models <span class="token keyword">import</span> SomeModel</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MySchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    fk_field<span class="token punctuation">:</span> SomeModel <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The field will still be treated as a ForeignKey if the type annotation is a subclass of Django <code>models.Model</code>.</p><h3 id="ðŸš€-usage-example-1" tabindex="-1"><a class="header-anchor" href="#ðŸš€-usage-example-1"><span>ðŸš€ Usage Example</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> myapp<span class="token punctuation">.</span>models <span class="token keyword">import</span> SomeModel</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create a related model instance</span></span>
<span class="line">related_model <span class="token operator">=</span> SomeModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Related&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create a schema with foreign key</span></span>
<span class="line">schema <span class="token operator">=</span> MySchema<span class="token punctuation">(</span></span>
<span class="line">    name<span class="token operator">=</span><span class="token string">&quot;Main&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    age<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">    fk_field<span class="token operator">=</span>related_model</span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create a model instance</span></span>
<span class="line">model_instance <span class="token operator">=</span> MyModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="line">    title<span class="token operator">=</span><span class="token string">&quot;Example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    structured_data<span class="token operator">=</span>schema</span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Or create using a dictionary with the ID of the related model</span></span>
<span class="line">model_instance <span class="token operator">=</span> MyModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="line">    title<span class="token operator">=</span><span class="token string">&quot;Example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    structured_data<span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Main&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;fk_field&quot;</span><span class="token punctuation">:</span> related_model<span class="token punctuation">.</span><span class="token builtin">id</span>  <span class="token comment"># Using the ID directly</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Access the foreign key</span></span>
<span class="line"><span class="token keyword">print</span><span class="token punctuation">(</span>model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name<span class="token punctuation">)</span>  <span class="token comment"># &quot;Related&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ðŸ§ -abstract-models-as-foreign-keys" tabindex="-1"><a class="header-anchor" href="#ðŸ§ -abstract-models-as-foreign-keys"><span>ðŸ§  Abstract Models as Foreign Keys</span></a></h2><p>You can also use abstract models as foreign keys:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models</span>
<span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>fields <span class="token keyword">import</span> ForeignKey</span>
<span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>models <span class="token keyword">import</span> BaseModel</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">AbstractModel</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    common_field <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">class</span> <span class="token class-name">Meta</span><span class="token punctuation">:</span></span>
<span class="line">        abstract <span class="token operator">=</span> <span class="token boolean">True</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ConcreteModel1</span><span class="token punctuation">(</span>AbstractModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    specific_field <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ConcreteModel2</span><span class="token punctuation">(</span>AbstractModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    another_field <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MySchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    abstract_fk<span class="token punctuation">:</span> ForeignKey<span class="token punctuation">[</span>AbstractModel<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Usage:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># The field will accept any model that inherits from AbstractModel</span></span>
<span class="line">instance1 <span class="token operator">=</span> ConcreteModel1<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span>common_field<span class="token operator">=</span><span class="token string">&quot;test1&quot;</span><span class="token punctuation">,</span> specific_field<span class="token operator">=</span><span class="token string">&quot;test2&quot;</span><span class="token punctuation">)</span></span>
<span class="line">instance2 <span class="token operator">=</span> ConcreteModel2<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span>common_field<span class="token operator">=</span><span class="token string">&quot;test3&quot;</span><span class="token punctuation">,</span> another_field<span class="token operator">=</span><span class="token string">&quot;test4&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Both can be used in the abstract_fk field</span></span>
<span class="line">model_instance <span class="token operator">=</span> MyModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="line">    title<span class="token operator">=</span><span class="token string">&quot;Example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    structured_data<span class="token operator">=</span>MySchema<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Test&quot;</span><span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">25</span><span class="token punctuation">,</span> abstract_fk<span class="token operator">=</span>instance1<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># You can change the related model to a different subclass</span></span>
<span class="line">model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>abstract_fk <span class="token operator">=</span> instance2</span>
<span class="line">model_instance<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ðŸ”€-many-to-many-relationships-queryset-fields" tabindex="-1"><a class="header-anchor" href="#ðŸ”€-many-to-many-relationships-queryset-fields"><span>ðŸ”€ Many-to-Many Relationships (QuerySet Fields)</span></a></h2><p>Many-to-Many relationships are handled using the <code>QuerySet</code> field.</p><h3 id="ðŸ§©-using-queryset-field" tabindex="-1"><a class="header-anchor" href="#ðŸ§©-using-queryset-field"><span>ðŸ§© Using QuerySet Field</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>fields <span class="token keyword">import</span> QuerySet</span>
<span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>models <span class="token keyword">import</span> BaseModel</span>
<span class="line"><span class="token keyword">from</span> myapp<span class="token punctuation">.</span>models <span class="token keyword">import</span> SomeModel</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MySchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    qs_field<span class="token punctuation">:</span> QuerySet<span class="token punctuation">[</span>SomeModel<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ðŸš€-usage-example-2" tabindex="-1"><a class="header-anchor" href="#ðŸš€-usage-example-2"><span>ðŸš€ Usage Example</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> myapp<span class="token punctuation">.</span>models <span class="token keyword">import</span> SomeModel</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create some related instances</span></span>
<span class="line">related_instances <span class="token operator">=</span> SomeModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>bulk_create<span class="token punctuation">(</span><span class="token punctuation">[</span></span>
<span class="line">    SomeModel<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Related1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    SomeModel<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Related2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    SomeModel<span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Related3&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create a schema with a queryset</span></span>
<span class="line">schema <span class="token operator">=</span> MySchema<span class="token punctuation">(</span></span>
<span class="line">    name<span class="token operator">=</span><span class="token string">&quot;Main&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    age<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">    qs_field<span class="token operator">=</span>SomeModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># Using a QuerySet</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Create a model instance</span></span>
<span class="line">model_instance <span class="token operator">=</span> MyModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="line">    title<span class="token operator">=</span><span class="token string">&quot;Example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    structured_data<span class="token operator">=</span>schema</span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Or create using a dictionary with the IDs of the related models</span></span>
<span class="line">model_instance <span class="token operator">=</span> MyModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="line">    title<span class="token operator">=</span><span class="token string">&quot;Example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    structured_data<span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Main&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;qs_field&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>  <span class="token comment"># Using a list of IDs</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Query the related objects</span></span>
<span class="line">filtered <span class="token operator">=</span> model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>qs_field<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>name__startswith<span class="token operator">=</span><span class="token string">&#39;Related&#39;</span><span class="token punctuation">)</span></span>
<span class="line">count <span class="token operator">=</span> model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>qs_field<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">first <span class="token operator">=</span> model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>qs_field<span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Change the queryset</span></span>
<span class="line">model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>qs_field <span class="token operator">=</span> SomeModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">&quot;Related1&quot;</span><span class="token punctuation">)</span></span>
<span class="line">model_instance<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ðŸ”„-queryset-order-preservation" tabindex="-1"><a class="header-anchor" href="#ðŸ”„-queryset-order-preservation"><span>ðŸ”„ QuerySet Order Preservation</span></a></h3><p>The QuerySet field maintains the order of the given QuerySet:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Create with ordered queryset</span></span>
<span class="line">model_instance <span class="token operator">=</span> MyModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="line">    title<span class="token operator">=</span><span class="token string">&quot;Example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    structured_data<span class="token operator">=</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Main&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;age&quot;</span><span class="token punctuation">:</span> <span class="token number">30</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&quot;qs_field&quot;</span><span class="token punctuation">:</span> SomeModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>order_by<span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Access ordered queryset</span></span>
<span class="line">first <span class="token operator">=</span> model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>qs_field<span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># First alphabetically</span></span>
<span class="line">last <span class="token operator">=</span> model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>qs_field<span class="token punctuation">.</span>last<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># Last alphabetically</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ðŸª›-custom-serializers-for-foreign-keys-and-querysets" tabindex="-1"><a class="header-anchor" href="#ðŸª›-custom-serializers-for-foreign-keys-and-querysets"><span>ðŸª› Custom Serializers for Foreign Keys and QuerySets</span></a></h2><p>You can define custom serializers for ForeignKey and QuerySet fields to control how they are serialized using <code>FieldSerializer</code>.</p><p>You need to pass a valid <code>rest_framework</code> serializer class to the <code>FieldSerializer</code> to handle model serialization.</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>fields <span class="token keyword">import</span> ForeignKey<span class="token punctuation">,</span> QuerySet</span>
<span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>models <span class="token keyword">import</span> BaseModel</span>
<span class="line"><span class="token keyword">from</span> structured<span class="token punctuation">.</span>pydantic<span class="token punctuation">.</span>fields<span class="token punctuation">.</span>serializer <span class="token keyword">import</span> FieldSerializer</span>
<span class="line"><span class="token keyword">from</span> rest_framework <span class="token keyword">import</span> serializers</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">CustomForeignKeySerializer</span><span class="token punctuation">(</span>serializers<span class="token punctuation">.</span>Serializer<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token keyword">def</span> <span class="token function">to_representation</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> instance<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token string">&quot;id&quot;</span><span class="token punctuation">:</span> instance<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> instance<span class="token punctuation">.</span>name<span class="token punctuation">,</span></span>
<span class="line">            <span class="token string">&quot;custom&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;ðŸ‘» I&#39;m custom!&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">MySchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    custom_serializer_fk<span class="token punctuation">:</span> Annotated<span class="token punctuation">[</span>ForeignKey<span class="token punctuation">[</span>SomeModel<span class="token punctuation">]</span><span class="token punctuation">,</span> FieldSerializer<span class="token punctuation">(</span>CustomForeignKeySerializer<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    custom_serializer_qs<span class="token punctuation">:</span> Annotated<span class="token punctuation">[</span>QuerySet<span class="token punctuation">[</span>SomeModel<span class="token punctuation">]</span><span class="token punctuation">,</span> FieldSerializer<span class="token punctuation">(</span>CustomForeignKeySerializer<span class="token punctuation">,</span> many<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">]</span> </span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ðŸ“¦-nested-relationships" tabindex="-1"><a class="header-anchor" href="#ðŸ“¦-nested-relationships"><span>ðŸ“¦ Nested Relationships</span></a></h2><p>You can combine these relationship types in nested structures:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">ChildSchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    fk_field<span class="token punctuation">:</span> SomeModel <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    qs_field<span class="token punctuation">:</span> QuerySet<span class="token punctuation">[</span>SomeModel<span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ParentSchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    age<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    fk_field<span class="token punctuation">:</span> SomeModel <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    child<span class="token punctuation">:</span> ChildSchema <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Usage:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">child_data <span class="token operator">=</span> ChildSchema<span class="token punctuation">(</span></span>
<span class="line">    name<span class="token operator">=</span><span class="token string">&quot;Child&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    age<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span></span>
<span class="line">    fk_field<span class="token operator">=</span>related_model2<span class="token punctuation">,</span></span>
<span class="line">    qs_field<span class="token operator">=</span>SomeModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span><span class="token builtin">filter</span><span class="token punctuation">(</span>name__in<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&quot;Related3&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Related4&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">parent_data <span class="token operator">=</span> ParentSchema<span class="token punctuation">(</span></span>
<span class="line">    name<span class="token operator">=</span><span class="token string">&quot;Parent&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    age<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">,</span></span>
<span class="line">    fk_field<span class="token operator">=</span>related_model1<span class="token punctuation">,</span></span>
<span class="line">    child<span class="token operator">=</span>child_data</span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">model_instance <span class="token operator">=</span> MyModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>create<span class="token punctuation">(</span></span>
<span class="line">    title<span class="token operator">=</span><span class="token string">&quot;Example&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    structured_data<span class="token operator">=</span>parent_data</span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Access nested relationships</span></span>
<span class="line">parent_fk <span class="token operator">=</span> model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">child_fk <span class="token operator">=</span> model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">child_qs_count <span class="token operator">=</span> model_instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>qs_field<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="best-practices" tabindex="-1"><a class="header-anchor" href="#best-practices"><span>Best Practices</span></a></h2><ol><li><p><strong>Recursive Relationships</strong>:</p><ul><li>Use <code>Optional</code> for single references</li><li>Use <code>List</code> for multiple references</li><li>Be careful with circular references to avoid infinite loops</li></ul></li><li><p><strong>Foreign Key Relationships</strong>:</p><ul><li>Always provide a default value (usually <code>None</code>)</li><li>Consider using the direct model class syntax for simplicity</li><li>Handle potential null values in your code</li></ul></li><li><p><strong>Many-to-Many Relationships</strong>:</p><ul><li>Use <code>QuerySet</code> for flexible querying</li><li>Consider performance implications of large querysets</li><li>Use appropriate filtering to limit queryset size</li></ul></li></ol><h2 id="common-issues-and-solutions" tabindex="-1"><a class="header-anchor" href="#common-issues-and-solutions"><span>Common Issues and Solutions</span></a></h2><ol><li><p><strong>Circular Imports</strong>:</p><ul><li>Use string literals for model references (<code>&#39;ModelName&#39;</code>)</li><li>Import models at the function level if needed</li></ul></li><li><p><strong>Performance</strong>:</p><ul><li>Enable caching to optimize query performance</li><li>Use appropriate indexing on related fields</li><li>Use <code>select_related()</code> for foreign keys when fetching models</li></ul></li><li><p><strong>Validation</strong>:</p><ul><li>Ensure related objects exist before assignment</li><li>Handle null values appropriately</li><li>Validate queryset results before assignment</li></ul></li></ol><h2 id="next-steps" tabindex="-1"><a class="header-anchor" href="#next-steps"><span>Next Steps</span></a></h2><p>After understanding relationships, you might want to explore:</p>`,50)),a("ul",null,[a("li",null,[t(e,{to:"/Guide/How%20to/Admin%20Integration/"},{default:p(()=>s[0]||(s[0]=[n("Admin Integration")])),_:1}),s[1]||(s[1]=n(" for managing relationships in the Django admin"))]),a("li",null,[t(e,{to:"/Guide/How%20to/REST%20Framework%20Integration/"},{default:p(()=>s[2]||(s[2]=[n("REST Framework Integration")])),_:1}),s[3]||(s[3]=n(" for API endpoints"))]),a("li",null,[t(e,{to:"/Guide/How%20to/Caching/"},{default:p(()=>s[4]||(s[4]=[n("Caching")])),_:1}),s[5]||(s[5]=n(" for optimizing relationship queries"))])])])}const v=l(r,[["render",d]]),b=JSON.parse('{"path":"/Guide/How%20to/Relationships/","title":"ðŸ”— Relationships","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"ðŸ”„ Types of Relationships","slug":"ðŸ”„-types-of-relationships","link":"#ðŸ”„-types-of-relationships","children":[]},{"level":2,"title":"ðŸ“¦ Recursive Relationships","slug":"ðŸ“¦-recursive-relationships","link":"#ðŸ“¦-recursive-relationships","children":[{"level":3,"title":"ðŸ§© Basic Recursion","slug":"ðŸ§©-basic-recursion","link":"#ðŸ§©-basic-recursion","children":[]},{"level":3,"title":"ðŸš€ Usage Example","slug":"ðŸš€-usage-example","link":"#ðŸš€-usage-example","children":[]}]},{"level":2,"title":"ðŸ”‘ Foreign Key Relationships","slug":"ðŸ”‘-foreign-key-relationships","link":"#ðŸ”‘-foreign-key-relationships","children":[{"level":3,"title":"ðŸ§© Using ForeignKey Field","slug":"ðŸ§©-using-foreignkey-field","link":"#ðŸ§©-using-foreignkey-field","children":[]},{"level":3,"title":"ðŸ”„ Alternative Syntax","slug":"ðŸ”„-alternative-syntax","link":"#ðŸ”„-alternative-syntax","children":[]},{"level":3,"title":"ðŸš€ Usage Example","slug":"ðŸš€-usage-example-1","link":"#ðŸš€-usage-example-1","children":[]}]},{"level":2,"title":"ðŸ§  Abstract Models as Foreign Keys","slug":"ðŸ§ -abstract-models-as-foreign-keys","link":"#ðŸ§ -abstract-models-as-foreign-keys","children":[]},{"level":2,"title":"ðŸ”€ Many-to-Many Relationships (QuerySet Fields)","slug":"ðŸ”€-many-to-many-relationships-queryset-fields","link":"#ðŸ”€-many-to-many-relationships-queryset-fields","children":[{"level":3,"title":"ðŸ§© Using QuerySet Field","slug":"ðŸ§©-using-queryset-field","link":"#ðŸ§©-using-queryset-field","children":[]},{"level":3,"title":"ðŸš€ Usage Example","slug":"ðŸš€-usage-example-2","link":"#ðŸš€-usage-example-2","children":[]},{"level":3,"title":"ðŸ”„ QuerySet Order Preservation","slug":"ðŸ”„-queryset-order-preservation","link":"#ðŸ”„-queryset-order-preservation","children":[]}]},{"level":2,"title":"ðŸª› Custom Serializers for Foreign Keys and QuerySets","slug":"ðŸª›-custom-serializers-for-foreign-keys-and-querysets","link":"#ðŸª›-custom-serializers-for-foreign-keys-and-querysets","children":[]},{"level":2,"title":"ðŸ“¦ Nested Relationships","slug":"ðŸ“¦-nested-relationships","link":"#ðŸ“¦-nested-relationships","children":[]},{"level":2,"title":"Best Practices","slug":"best-practices","link":"#best-practices","children":[]},{"level":2,"title":"Common Issues and Solutions","slug":"common-issues-and-solutions","link":"#common-issues-and-solutions","children":[]},{"level":2,"title":"Next Steps","slug":"next-steps","link":"#next-steps","children":[]}],"git":{"updatedTime":1753646387000,"contributors":[{"name":"bnznamco","username":"bnznamco","email":"gabriele.baldi.01@gmail.com","commits":4,"url":"https://github.com/bnznamco"}],"changelog":[{"hash":"4605dd6ea82874daa27ae6cd98c35bad9da70c4c","time":1753646387000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"feat: added possibility to specify a custom serliazer for ForeignKey and QuerySet fields"},{"hash":"695f3a53d7ba8180183e8cb2e0cabcd2ffbd0893","time":1742998502000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: update contents"},{"hash":"a03b155355b11640e5a70a3df3068c393c90f6b1","time":1742982268000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: updated to vuepress 2"},{"hash":"853b7590c1e47d887ae5c09c54d82094e5b20d66","time":1742974046000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: added github-pages docs"}]},"filePathRelative":"Guide/How to/Relationships/README.md"}');export{v as comp,b as data};
