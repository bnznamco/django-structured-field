import{_ as l,c,a as p,b as a,e as i,d as s,w as t,r as o,o as r}from"./app-B4__nN3S.js";const u={};function d(h,n){const e=o("RouteLink");return r(),c("div",null,[n[6]||(n[6]=p(`<h1 id="⚡-caching" tabindex="-1"><a class="header-anchor" href="#⚡-caching"><span>⚡ Caching</span></a></h1><p>This guide explains how to work with caching in Django Structured JSON Field.</p><h2 id="📋-overview" tabindex="-1"><a class="header-anchor" href="#📋-overview"><span>📋 Overview</span></a></h2><p>The field implements a caching mechanism to optimize queries during serialization and prevent multiple identical queries, especially when dealing with relationships such as <code>ForeignKey</code> and <code>QuerySet</code> fields.</p><h2 id="🌟-current-cache-features" tabindex="-1"><a class="header-anchor" href="#🌟-current-cache-features"><span>🌟 Current Cache Features</span></a></h2><ul><li>✅ Shared cache between <code>ForeignKey</code> fields and <code>QuerySet</code> fields</li><li>✅ Shared cache through nested schemas</li><li>✅ Shared cache through nested lists of schemas</li><li>⏳ Shared cache between all <code>StructuredJSONFields</code> in the same instance</li><li>⏳ Shared cache between multiple instances of the same model</li><li>⏳ Cache invalidation mechanism</li></ul><h2 id="🔧-configuration" tabindex="-1"><a class="header-anchor" href="#🔧-configuration"><span>🔧 Configuration</span></a></h2><h3 id="📌-basic-settings" tabindex="-1"><a class="header-anchor" href="#📌-basic-settings"><span>📌 Basic Settings</span></a></h3><p>Configure caching in your <code>settings.py</code>:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line">STRUCTURED_FIELD <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span>  <span class="token comment"># Default is True</span></span>
<span class="line">        <span class="token string">&#39;SHARED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span>   <span class="token comment"># ⚠️ EXPERIMENTAL: enables thread-shared cache</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🔄-cache-options" tabindex="-1"><a class="header-anchor" href="#🔄-cache-options"><span>🔄 Cache Options</span></a></h3><ol><li><strong>ENABLED</strong>: Enable/disable caching globally (default: <code>True</code>)</li><li><strong>SHARED</strong>: Enable thread-shared cache (experimental feature, default: <code>False</code>)</li></ol><h2 id="🧠-how-caching-works" tabindex="-1"><a class="header-anchor" href="#🧠-how-caching-works"><span>🧠 How Caching Works</span></a></h2><p>The caching system in Django Structured JSON Field is designed to optimize query performance when working with related objects:</p><ol><li>When a related object is first accessed, it&#39;s fetched from the database and stored in the cache</li><li>Subsequent accesses to the same related object will use the cached version instead of making another database query</li><li>The cache is maintained during the serialization process, improving performance especially with deeply nested structures</li></ol><h3 id="🐢-without-caching-multiple-queries" tabindex="-1"><a class="header-anchor" href="#🐢-without-caching-multiple-queries"><span>🐢 Without Caching (Multiple Queries)</span></a></h3><p>When caching is disabled, each access to a related field requires a separate database query:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Without caching, this makes 6 separate database queries</span></span>
<span class="line">instance <span class="token operator">=</span> TestModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="🚀-with-caching-single-query" tabindex="-1"><a class="header-anchor" href="#🚀-with-caching-single-query"><span>🚀 With Caching (Single Query)</span></a></h3><p>When caching is enabled, related objects are fetched with a single optimized query:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># With caching, this makes just 1 database query for all related objects</span></span>
<span class="line">instance <span class="token operator">=</span> TestModel<span class="token punctuation">.</span>objects<span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line">instance<span class="token punctuation">.</span>structured_data<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>child<span class="token punctuation">.</span>fk_field<span class="token punctuation">.</span>name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="📊-cache-performance-benefits" tabindex="-1"><a class="header-anchor" href="#📊-cache-performance-benefits"><span>📊 Cache Performance Benefits</span></a></h2><p>The caching system provides significant performance benefits in several scenarios:</p><h3 id="_1️⃣-nested-foreign-keys" tabindex="-1"><a class="header-anchor" href="#_1️⃣-nested-foreign-keys"><span>1️⃣ Nested Foreign Keys</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">ChildSchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    fk_field<span class="token punctuation">:</span> SomeModel <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ParentSchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    child<span class="token punctuation">:</span> ChildSchema <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line">    fk_field<span class="token punctuation">:</span> SomeModel <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When accessing multiple foreign keys in a nested structure, the cache ensures efficient queries.</p><h3 id="_2️⃣-queryset-fields" tabindex="-1"><a class="header-anchor" href="#_2️⃣-queryset-fields"><span>2️⃣ QuerySet Fields</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">MySchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    qs_field<span class="token punctuation">:</span> QuerySet<span class="token punctuation">[</span>SomeModel<span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When working with QuerySet fields, the cache ensures the related objects are fetched efficiently.</p><h3 id="_3️⃣-lists-of-nested-schemas" tabindex="-1"><a class="header-anchor" href="#_3️⃣-lists-of-nested-schemas"><span>3️⃣ Lists of Nested Schemas</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">ChildSchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    fk_field<span class="token punctuation">:</span> SomeModel <span class="token operator">=</span> <span class="token boolean">None</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ParentSchema</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span></span>
<span class="line">    name<span class="token punctuation">:</span> <span class="token builtin">str</span></span>
<span class="line">    childs<span class="token punctuation">:</span> List<span class="token punctuation">[</span>ChildSchema<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The cache works effectively even with lists of schemas containing relationships.</p><h2 id="🔄-cache-behavior-in-different-modes" tabindex="-1"><a class="header-anchor" href="#🔄-cache-behavior-in-different-modes"><span>🔄 Cache Behavior in Different Modes</span></a></h2><h3 id="🔒-standard-cache-shared-false" tabindex="-1"><a class="header-anchor" href="#🔒-standard-cache-shared-false"><span>🔒 Standard Cache (SHARED=False)</span></a></h3><ul><li>Cache is maintained per instance</li><li>Optimizes queries within a single instance</li><li>Safe for production use</li></ul><h3 id="🌐-shared-cache-shared-true" tabindex="-1"><a class="header-anchor" href="#🌐-shared-cache-shared-true"><span>🌐 Shared Cache (SHARED=True)</span></a></h3><ul><li>Cache is shared across all instances</li><li>Provides maximum optimization but with some risks</li><li>Experimental and not recommended for production without testing</li></ul><h2 id="💡-best-practices" tabindex="-1"><a class="header-anchor" href="#💡-best-practices"><span>💡 Best Practices</span></a></h2><ol><li><p><strong>⚙️ Cache Configuration</strong>:</p><ul><li>Keep caching enabled in production for performance benefits</li><li>Test thoroughly before enabling shared cache in production</li><li>Consider disabling cache only for debugging purposes</li></ul></li><li><p><strong>🔍 Query Optimization</strong>:</p><ul><li>Use appropriate database indexes on related model fields</li><li>Still use <code>select_related()</code> when fetching initial models</li><li>Consider query patterns in your application design</li></ul></li><li><p><strong>🧪 Testing</strong>:</p><ul><li>Test your application with both cache enabled and disabled</li><li>Verify behavior with both standard and shared cache</li><li>Use profiling tools to measure performance improvements</li></ul></li></ol><h2 id="❓-common-issues-and-solutions" tabindex="-1"><a class="header-anchor" href="#❓-common-issues-and-solutions"><span>❓ Common Issues and Solutions</span></a></h2><ol><li><p><strong>🔄 Stale Data</strong>:</p><ul><li>Cache doesn&#39;t automatically update when related objects change</li><li>Refresh objects from database when needed</li><li>Consider application design to minimize cache staleness</li></ul></li><li><p><strong>💾 Memory Usage</strong>:</p><ul><li>Monitor memory consumption with large datasets</li><li>Be aware of the memory tradeoff for performance</li><li>Consider clearing cache for very large operations</li></ul></li></ol><h2 id="🔧-testing-different-cache-configurations" tabindex="-1"><a class="header-anchor" href="#🔧-testing-different-cache-configurations"><span>🔧 Testing Different Cache Configurations</span></a></h2><p>You can test different cache configurations by modifying your settings:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code><span class="line"><span class="token comment"># Disable cache entirely (for testing or debugging)</span></span>
<span class="line">STRUCTURED_FIELD <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Enable standard cache (recommended for production)</span></span>
<span class="line">STRUCTURED_FIELD <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;SHARED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Enable shared cache (experimental)</span></span>
<span class="line">STRUCTURED_FIELD <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&#39;CACHE&#39;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string">&#39;ENABLED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string">&#39;SHARED&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="🔄-next-steps" tabindex="-1"><a class="header-anchor" href="#🔄-next-steps"><span>🔄 Next Steps</span></a></h2><p>After understanding caching, you might want to explore:</p>`,46)),a("ul",null,[a("li",null,[i(e,{to:"/Guide/How%20to/REST%20Framework%20Integration/"},{default:t(()=>n[0]||(n[0]=[s("🌍 REST Framework Integration")])),_:1}),n[1]||(n[1]=s(" for API optimization"))]),a("li",null,[i(e,{to:"/Guide/How%20to/Relationships/"},{default:t(()=>n[2]||(n[2]=[s("🔗 Relationships")])),_:1}),n[3]||(n[3]=s(" for complex data structures"))]),a("li",null,[i(e,{to:"/Guide/How%20to/Admin%20Integration/"},{default:t(()=>n[4]||(n[4]=[s("🧰 Admin Integration")])),_:1}),n[5]||(n[5]=s(" for admin interface optimization"))])])])}const k=l(u,[["render",d]]),g=JSON.parse('{"path":"/Guide/How%20to/Caching/","title":"⚡ Caching","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"📋 Overview","slug":"📋-overview","link":"#📋-overview","children":[]},{"level":2,"title":"🌟 Current Cache Features","slug":"🌟-current-cache-features","link":"#🌟-current-cache-features","children":[]},{"level":2,"title":"🔧 Configuration","slug":"🔧-configuration","link":"#🔧-configuration","children":[{"level":3,"title":"📌 Basic Settings","slug":"📌-basic-settings","link":"#📌-basic-settings","children":[]},{"level":3,"title":"🔄 Cache Options","slug":"🔄-cache-options","link":"#🔄-cache-options","children":[]}]},{"level":2,"title":"🧠 How Caching Works","slug":"🧠-how-caching-works","link":"#🧠-how-caching-works","children":[{"level":3,"title":"🐢 Without Caching (Multiple Queries)","slug":"🐢-without-caching-multiple-queries","link":"#🐢-without-caching-multiple-queries","children":[]},{"level":3,"title":"🚀 With Caching (Single Query)","slug":"🚀-with-caching-single-query","link":"#🚀-with-caching-single-query","children":[]}]},{"level":2,"title":"📊 Cache Performance Benefits","slug":"📊-cache-performance-benefits","link":"#📊-cache-performance-benefits","children":[{"level":3,"title":"1️⃣ Nested Foreign Keys","slug":"_1️⃣-nested-foreign-keys","link":"#_1️⃣-nested-foreign-keys","children":[]},{"level":3,"title":"2️⃣ QuerySet Fields","slug":"_2️⃣-queryset-fields","link":"#_2️⃣-queryset-fields","children":[]},{"level":3,"title":"3️⃣ Lists of Nested Schemas","slug":"_3️⃣-lists-of-nested-schemas","link":"#_3️⃣-lists-of-nested-schemas","children":[]}]},{"level":2,"title":"🔄 Cache Behavior in Different Modes","slug":"🔄-cache-behavior-in-different-modes","link":"#🔄-cache-behavior-in-different-modes","children":[{"level":3,"title":"🔒 Standard Cache (SHARED=False)","slug":"🔒-standard-cache-shared-false","link":"#🔒-standard-cache-shared-false","children":[]},{"level":3,"title":"🌐 Shared Cache (SHARED=True)","slug":"🌐-shared-cache-shared-true","link":"#🌐-shared-cache-shared-true","children":[]}]},{"level":2,"title":"💡 Best Practices","slug":"💡-best-practices","link":"#💡-best-practices","children":[]},{"level":2,"title":"❓ Common Issues and Solutions","slug":"❓-common-issues-and-solutions","link":"#❓-common-issues-and-solutions","children":[]},{"level":2,"title":"🔧 Testing Different Cache Configurations","slug":"🔧-testing-different-cache-configurations","link":"#🔧-testing-different-cache-configurations","children":[]},{"level":2,"title":"🔄 Next Steps","slug":"🔄-next-steps","link":"#🔄-next-steps","children":[]}],"git":{"updatedTime":1742998502000,"contributors":[{"name":"bnznamco","username":"bnznamco","email":"gabriele.baldi.01@gmail.com","commits":3,"url":"https://github.com/bnznamco"}],"changelog":[{"hash":"695f3a53d7ba8180183e8cb2e0cabcd2ffbd0893","time":1742998502000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: update contents"},{"hash":"a03b155355b11640e5a70a3df3068c393c90f6b1","time":1742982268000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: updated to vuepress 2"},{"hash":"853b7590c1e47d887ae5c09c54d82094e5b20d66","time":1742974046000,"email":"gabriele.baldi.01@gmail.com","author":"bnznamco","message":"docs: added github-pages docs"}]},"filePathRelative":"Guide/How to/Caching/README.md"}');export{k as comp,g as data};
